version: "3"

services:

  stand-db:
    build:
      context: ./db
    image: my-postgres:local
    container_name: stand-db
    hostname: stand-db
    restart: always
    user: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      TZ: ${TZ}
    ports:
      - "5432:5432"
    networks:
      stand_net_bridge:
        ipv4_address: 172.16.1.5
      stand_net:
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  api:
    build: ./app
    container_name: api
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      API_HOST: ${API_HOST}
      API_PORT: ${API_PORT}
      TZ: ${TZ}
    ports:
      - 8000:8000
    networks:
      stand_net_bridge:
        ipv4_address: 172.16.1.6
      stand_net:
    depends_on:
      stand-db:
        condition: service_healthy
        restart: true

  pipline:
    build: ./pipline
    container_name: pipline
    restart: always
    environment:
      API_HOST: ${API_HOST}
      API_PORT: ${API_PORT}
      DATE_START: ${DATE_START}
      TZ: ${TZ}
    ports:
      - 80:80
    networks:
      stand_net_bridge:
        ipv4_address: 172.16.1.4
    depends_on:
      stand-db:
        condition: service_healthy
        restart: true
      api:
        condition: service_started

  tg_bot:
    build: ./tg_bot
    container_name: tg_bot
    restart: always
    environment:
      API_HOST: ${API_HOST}
      API_PORT: ${API_PORT}
      TZ: ${TZ}
      TG_TOKEN_BOT: ${TG_TOKEN_BOT}
    ports:
      - 8080:8080
    networks:
      stand_net_bridge:
        ipv4_address: 172.16.1.3
      stand_net:
    depends_on:
      stand-db:
        condition: service_healthy
        restart: true
      api:
        condition: service_started

networks:
  stand_net_bridge:
    name: stand_net_bridge
    driver: bridge
    internal: true
    ipam:
      config:
        - subnet: 172.16.1.0/24
  stand_net:
    name: stand_net
    driver: bridge
